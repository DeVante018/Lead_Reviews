Flask:
What license(s) or terms of services apply to this technology?
    Flask uses a BSD license which allows redistribution and use of source code as long as the conditions, found here, are met.
    - https://flask.palletsprojects.com/en/1.1.x/license/ 

What does this technology (library/framework/service) accomplish for you? 
    Flask helps us establish a server and conduct the server-side connections and communications with the clients on the frontend.
How does this technology accomplish what it does?
    Flask documentation can be found here: https://flask.palletsprojects.com/en/1.1.x/
    Below are the functions of Flask that helps us accomplish our tasks:
    Flask ():
        Designate where the server is and which folder of pages it should focus on rendering on the site. 
    redirect ():
        Arguments:
        Function Calls:
        Returns:

        This function helps the server redirect the user to another page or the page they should be going to after a specific action is completed, such as logging in or out of their account should redirect them to the main page or redirect them to the login page respectively.

    render_template (github link: https://github.com/pallets/flask/blob/5e12748d0efb5fc3d1f6a68d7bf05fd8980a2fd4/flask/templating.py#L112 ):
        Arguments: template_name_or_list, **context
        Function Calls: update_template_context(context)
        Returns: _render (GitHub Link: https://github.com/pallets/flask/blob/5e12748d0efb5fc3d1f6a68d7bf05fd8980a2fd4/flask/templating.py#L103 ) function call

        This function renders any of the html templates in the templates folder for the user to view and interact with. The actual function retrieves the template. 
        The returned _render function call sends the template to the server, which was created in the 
        Flaskâ€™s app.py (GitHub Link: https://github.com/pallets/flask/blob/03db9194d8d229d04e6a37b14bbe2499d23922d5/src/flask/app.py#L782).

    request ():
        Arguments:
        Function Calls:
        Returns:

        This function is used to retrieve movie information with a get request to the movie collection api we use.

    flash ():
        Arguments:
        Function Calls:
        Returns:
        
        This function is used to alert the user of any invalid or incorrect information that is detected from their input on the server, such as a incorrect password or username.


flask_login:

What license(s) or terms of service apply to this technology? 
    flask_login has an MIT license where the user can use the source code as long as the requirements, found here, are met.
    - https://opensource.org/licenses/MIT 
What does this technology (library/framework/service) accomplish for you? 
    This technology helps us with user session managements such as logging into their accounts and logging out of their accounts and storing their accounts.

How does this technology accomplish what it does?
    Below are the specific functions that we used to accomplish our task:
    LoginManager ():
    
    This function manages the login procedure that happens when a user attempts to log in.
    
    login_required ():
        Arguments:
        Function Calls:
        Returns:
        
        This ensures that a user is logged in before they can be given access to use the function.

    logout_user ():
        Arguments:
        Function Calls:
        Returns:
        
        This function logs a user out.

    login_user ():
        Arguments:
        Function Calls:
        Returns:

        This function logs a user in.

flask_pymongo:
What license(s) or terms of service apply to this technology? 
    Flask_pymongo has a BSD license which allows redistribution and use of source code as long as the conditions, found here, are met.
    - https://github.com/dcrosta/flask-pymongo/blob/master/LICENSE 
What does this technology (library/framework/service) accomplish for you? 
    This technology helps us connect to the mongodb database from our flask server.
How does this technology accomplish what it does?
    Documentation for flask_pymongo can be found here: https://pymongo.readthedocs.io/en/stable/ 
    Below are the specific functions we used to accomplish this task:

    PyMongo ():
        This connects our server to the mongodb database after we specified the connection and the name of the database we want to store data on.


Jinja is the template engine and Werkzeug is the WSGI toolkit that Flask is dependant on in order to work:

Jinja uses a BSD 3-clause license which means the source code can be used of redistributed as long as the requirements are met:
    - https://github.com/pallets/jinja/blob/master/LICENSE.rst 

How does Jinja work? 
    - Jinja Documentation: https://jinja.palletsprojects.com/en/2.11.x/  

Werkzeug allows redistribution and use of source code as long as the conditions are met: 
    - https://github.com/pallets/werkzeug/blob/master/LICENSE.rst 

How does Werkzeug work?
    - https://werkzeug.palletsprojects.com/en/1.0.x/